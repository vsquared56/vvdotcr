steps:
- task: NodeTool@0
  displayName: 'Use Node $(nodeVersion).x'
  inputs:
    versionSpec: '$(nodeVersion).x'

- task: Bash@3
  displayName: 'Corepack enable'
  inputs:
    targetType: 'inline'
    script: 'corepack enable'

- task: Bash@3
  displayName: 'Install dependencies'
  inputs:
    targetType: 'inline'
    script: 'yarn install'

- task: Bash@3
  displayName: 'Clean public folder'
  inputs:
    targetType: 'inline'
    script: 'yarn clean'

- task: Bash@3
  displayName: 'yarn build'
  inputs:
    targetType: 'inline'
    script: 'yarn build'

- task: ArchiveFiles@2
  displayName: 'Zip Azure functions'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/packages/functions'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/functions_$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureFunctionApp@1
  displayName: 'Deploy Azure functions'
  inputs:
    azureSubscription: 'Azure Visual Studio Subscription'
    appType: 'functionAppLinux'
    appName: 'vvdotcr-backend-functions-dev'
    package: '$(Build.ArtifactStagingDirectory)/functions_$(Build.BuildId).zip'
    runtimeStack: 'NODE|$(nodeVersion)'

- task: AzureStaticWebApp@0
  displayName: 'Deploy Azure Static Web App'
  inputs:
    verbose: true
    azure_static_web_apps_api_token: $(azure_deployment_token)
    skip_app_build: true
    skip_api_build: true
    app_location: 'packages/swa/public'
    api_location: 'packages/swa/api'